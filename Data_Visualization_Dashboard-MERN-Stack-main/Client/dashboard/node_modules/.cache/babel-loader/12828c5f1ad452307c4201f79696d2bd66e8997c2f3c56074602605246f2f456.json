{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Weed\\\\Downloads\\\\Data_Visualization_Dashboard-MERN-Stack-main\\\\Data_Visualization_Dashboard-MERN-Stack-main\\\\Client\\\\dashboard\\\\src\\\\charts\\\\BarChart.jsx\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = _ref => {\n  let {\n    serverData\n  } = _ref;\n  let uniqueSectors = [];\n\n  //using forEach because it doesn't return any array and we are adding unique sector names to an array\n  serverData.forEach(i => {\n    if (!uniqueSectors.includes(i.sector) && i.sector !== \"\") {\n      uniqueSectors.push(i.sector);\n    }\n  });\n\n  // counting the total number of projects in each sector uniquely\n  const sectorCount = uniqueSectors.map(item => {\n    return {\n      sector: item,\n      count: serverData.filter(i => i.sector === item).length\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '50vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: uniqueSectors.map(e => e),\n        datasets: [{\n          label: 'Total Projects',\n          data: sectorCount.map(e => e.count),\n          borderWidth: 1\n        }\n        // {\n        //     label: 'Quantity',\n        //     data: [7, 26, 111, 22, 11, 56]\n        // }\n        ]\n      },\n\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            type: 'linear',\n            beginAtZero: true\n          }\n        }\n      },\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","Bar","Chart","jsxDEV","_jsxDEV","BarChart","_ref","serverData","uniqueSectors","forEach","i","includes","sector","push","sectorCount","map","item","count","filter","length","style","height","children","data","labels","e","datasets","label","borderWidth","options","maintainAspectRatio","scales","y","type","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Weed/Downloads/Data_Visualization_Dashboard-MERN-Stack-main/Data_Visualization_Dashboard-MERN-Stack-main/Client/dashboard/src/charts/BarChart.jsx"],"sourcesContent":["import React from 'react'\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\n\n\nconst BarChart = ({serverData}) => {\n\n    let uniqueSectors = [];\n    \n    //using forEach because it doesn't return any array and we are adding unique sector names to an array\n    serverData.forEach((i) => {\n        if (!uniqueSectors.includes(i.sector) && i.sector !== \"\") {\n            uniqueSectors.push(i.sector);\n        }\n    })\n\n    // counting the total number of projects in each sector uniquely\n    const sectorCount = uniqueSectors.map((item) => {\n        return {\n            sector: item,\n            count: serverData.filter((i) => i.sector === item).length\n        }\n    })\n    \n\n    return (\n        <div style={{ height:'50vh'}}>\n            <Bar\n                data={{\n                    labels: uniqueSectors.map(e=>e),\n                    datasets: [\n                        {\n                            label: 'Total Projects',\n                            data: sectorCount.map(e=>e.count),\n                            borderWidth: 1,\n                        },\n                        // {\n                        //     label: 'Quantity',\n                        //     data: [7, 26, 111, 22, 11, 56]\n                        // }\n                    ]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    scales: {\n                        y: {\n                            type: 'linear',\n                            beginAtZero: true,\n                        },\n                    }\n                }}\n                height={300}\n                \n            />\n        </div>\n    )\n}\n\nexport default BarChart"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,QAAQ,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAACC;EAAU,CAAC,GAAAD,IAAA;EAE1B,IAAIE,aAAa,GAAG,EAAE;;EAEtB;EACAD,UAAU,CAACE,OAAO,CAAEC,CAAC,IAAK;IACtB,IAAI,CAACF,aAAa,CAACG,QAAQ,CAACD,CAAC,CAACE,MAAM,CAAC,IAAIF,CAAC,CAACE,MAAM,KAAK,EAAE,EAAE;MACtDJ,aAAa,CAACK,IAAI,CAACH,CAAC,CAACE,MAAM,CAAC;IAChC;EACJ,CAAC,CAAC;;EAEF;EACA,MAAME,WAAW,GAAGN,aAAa,CAACO,GAAG,CAAEC,IAAI,IAAK;IAC5C,OAAO;MACHJ,MAAM,EAAEI,IAAI;MACZC,KAAK,EAAEV,UAAU,CAACW,MAAM,CAAER,CAAC,IAAKA,CAAC,CAACE,MAAM,KAAKI,IAAI,CAAC,CAACG;IACvD,CAAC;EACL,CAAC,CAAC;EAGF,oBACIf,OAAA;IAAKgB,KAAK,EAAE;MAAEC,MAAM,EAAC;IAAM,CAAE;IAAAC,QAAA,eACzBlB,OAAA,CAACH,GAAG;MACAsB,IAAI,EAAE;QACFC,MAAM,EAAEhB,aAAa,CAACO,GAAG,CAACU,CAAC,IAAEA,CAAC,CAAC;QAC/BC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,gBAAgB;UACvBJ,IAAI,EAAET,WAAW,CAACC,GAAG,CAACU,CAAC,IAAEA,CAAC,CAACR,KAAK,CAAC;UACjCW,WAAW,EAAE;QACjB;QACA;QACA;QACA;QACA;QAAA;MAER,CAAE;;MACFC,OAAO,EAAE;QACLC,mBAAmB,EAAE,KAAK;QAC1BC,MAAM,EAAE;UACJC,CAAC,EAAE;YACCC,IAAI,EAAE,QAAQ;YACdC,WAAW,EAAE;UACjB;QACJ;MACJ,CAAE;MACFb,MAAM,EAAE;IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAC,EAAA,GAnDKlC,QAAQ;AAqDd,eAAeA,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}