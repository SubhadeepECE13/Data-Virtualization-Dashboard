{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Weed\\\\Downloads\\\\Data_Visualization_Dashboard-MERN-Stack-main\\\\Data_Visualization_Dashboard-MERN-Stack-main\\\\Client\\\\dashboard\\\\src\\\\components\\\\Tabsrow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\n// Import from files\nimport CardsForData from './CardsForData';\nimport AccordionForCharts from './AccordionForCharts';\nimport Filters from './Filters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tabsrow = _ref => {\n  _s();\n  let {\n    data,\n    setMainData\n  } = _ref;\n  // State to store the number of data cards we want to display at a time\n  const [limit, setLimit] = useState(5);\n  const [search, setSearch] = useState(\"\");\n  const limitedData = data.slice(0, limit);\n\n  // Function to make an API call to get the filtered data\n  const handleSearchResult = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.get(`http://localhost:5000/api/data/any/country`, {\n        params: {\n          query: search\n        }\n      });\n      setMainData(response.data.data);\n      setSearch(\"\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 8\n  }, this);\n};\n_s(Tabsrow, \"2bi3yOrJ9nO83eobP4Jlf/wh1fA=\");\n_c = Tabsrow;\nexport default Tabsrow;\nvar _c;\n$RefreshReg$(_c, \"Tabsrow\");","map":{"version":3,"names":["React","useState","Tab","Tabs","CardGroup","Button","axios","CardsForData","AccordionForCharts","Filters","jsxDEV","_jsxDEV","Tabsrow","_ref","_s","data","setMainData","limit","setLimit","search","setSearch","limitedData","slice","handleSearchResult","e","preventDefault","response","get","params","query","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Weed/Downloads/Data_Visualization_Dashboard-MERN-Stack-main/Data_Visualization_Dashboard-MERN-Stack-main/Client/dashboard/src/components/Tabsrow.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n\n// Import from files\nimport CardsForData from './CardsForData';\nimport AccordionForCharts from './AccordionForCharts';\nimport Filters from './Filters';\n\nconst Tabsrow = ({ data, setMainData }) => {\n    // State to store the number of data cards we want to display at a time\n    const [limit, setLimit] = useState(5);\n    const [search, setSearch] = useState(\"\");\n\n    const limitedData = data.slice(0, limit);\n\n    // Function to make an API call to get the filtered data\n    const handleSearchResult = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.get(`http://localhost:5000/api/data/any/country`, {\n                params: { query: search }\n            });\n            setMainData(response.data.data);\n            setSearch(\"\");\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n       <div>hello</div>\n    );\n};\n\nexport default Tabsrow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,OAAO,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAAH,IAAA;EAClC;EACA,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMoB,WAAW,GAAGN,IAAI,CAACO,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC;;EAExC;EACA,MAAMM,kBAAkB,GAAG,MAAOC,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAE,4CAA2C,EAAE;QAC3EC,MAAM,EAAE;UAAEC,KAAK,EAAEV;QAAO;MAC5B,CAAC,CAAC;MACFH,WAAW,CAACU,QAAQ,CAACX,IAAI,CAACA,IAAI,CAAC;MAC/BK,SAAS,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACGnB,OAAA;IAAAqB,QAAA,EAAK;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEvB,CAAC;AAACtB,EAAA,CAxBIF,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}